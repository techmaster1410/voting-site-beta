{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/question/question.component.ts","webpack:///src/app/components/question/question.component.html","webpack:///src/app/components/result/result.component.ts","webpack:///src/app/components/result/result.component.html","webpack:///src/app/components/view-quizes/view-quizes.component.ts","webpack:///src/app/components/view-quizes/view-quizes.component.html","webpack:///src/app/services/quiz.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","title","selector","templateUrl","styleUrls","appRoutes","path","component","AppModule","forRoot","enableTracing","declarations","imports","providers","bootstrap","QuestionComponent","quizService","router","route","questions","choices","index","isLastQuestion","isFirstQuestion","answer","count","paramMap","subscribe","params","console","log","get","quizName","fetchAllQuestions","res","length","currentQuestion","currentQuestionText","text","isAnswer","forEach","i","navigate","totalQuestion","viewResult","ResultComponent","cnt","tq","percentage","ViewQuizesComponent","showMessage","quizes","fetchAllQuizes","name","baseUrl","quesUrl","QuizService","http","providedIn","environment","production","bootstrapModule","err","error"],"mappings":";;;;;;;;;;;;;;;;;AAAA,aAASA,wBAAT,CAAkCC,GAAlC,EAAuC;AACtC;AACA;AACA,aAAOC,OAAO,CAACC,OAAR,GAAkBC,IAAlB,CAAuB,YAAW;AACxC,YAAIC,CAAC,GAAG,IAAIC,KAAJ,CAAU,yBAAyBL,GAAzB,GAA+B,GAAzC,CAAR;AACAI,SAAC,CAACE,IAAF,GAAS,kBAAT;AACA,cAAMF,CAAN;AACA,OAJM,CAAP;AAKA;;AACDL,4BAAwB,CAACQ,IAAzB,GAAgC,YAAW;AAAE,aAAO,EAAP;AAAY,KAAzD;;AACAR,4BAAwB,CAACG,OAAzB,GAAmCH,wBAAnC;AACAS,UAAM,CAACC,OAAP,GAAiBV,wBAAjB;AACAA,4BAAwB,CAACW,EAAzB,GAA8B,yCAA9B;;;;;;;;;;;;;;;;ACZA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOaC,Y,GALb;AAAA;;AAME,WAAAC,KAAA,GAAQ,aAAR;AACD,K;;;uBAFYD,Y;AAAY,K;;;YAAZA,Y;AAAY,+B;AAAA,e;AAAA,a;AAAA,o0B;AAAA;AAAA;ACPzB;;AACI;;AAAqD;;AAAW;;AAChE;;AACE;;AACF;;AAEA;;AACE;;AACE;;AACE;;AAA+D;;AAAK;;AAAsB;;AAAS;;AAAO;;AAC5G;;AAGF;;AACA;;AACE;;AACA;;AAAmE;;AAAM;;AAC3E;;AACF;;AACF;;AAKF;;AACA;;AAAgD;;AAAW;;AAC3D;;AAEA;;;;;;;;;sEDrBaA,Y,EAAY;cALxB,uDAKwB;eALd;AACTE,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,sBAFJ;AAGTC,mBAAS,EAAE,CAAC,qBAAD;AAHF,S;AAKc,Q;;;;;;;;;;;;;;;;;;AEPzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA,uD,CAMA;AAQA;;;AACA,QAAMC,SAAS,GAAW,CAExB;AAAEC,UAAI,EAAE,MAAR;AAAqBC,eAAS,EAAE;AAAhC,KAFwB,EAGxB;AAAED,UAAI,EAAE,UAAR;AAAqBC,eAAS,EAAE;AAAhC,KAHwB,EAIxB;AAAED,UAAI,EAAE,YAAR;AAAqBC,eAAS,EAAE;AAAhC,KAJwB,CAA1B,C,CAQA;;QAqBaC,S;;;;;YAAAA,S;AAAS,kBAFR,2DAEQ;;;;yBAATA,S;AAAS,O;AAAA,iBAHT,E;AAAE,gBAVJ,CACP,uEADO,EAEP,qEAFO,EAGP,0DAHO,EAIP,kEAJO,EAKP,6DAAaC,OAAb,CACEJ,SADF,EAEE;AAAEK,qBAAa,EAAE;AAAjB,OAFF,CAE0B;AAF1B,OALO,CAUI;;;;0HAGFF,S,EAAS;AAAA,uBAlBlB,2DAkBkB,EAjBlB,iGAiBkB,EAhBlB,yFAgBkB,EAflB,mFAekB;AAfH,kBAGf,uEAHe,EAIf,qEAJe,EAKf,0DALe,EAMf,kEANe,EAMI,4DANJ;AAeG,O;AATC,K;;;;;sEASVA,S,EAAS;cApBrB,sDAoBqB;eApBZ;AACRG,sBAAY,EAAE,CACZ,2DADY,EAEZ,iGAFY,EAGZ,yFAHY,EAIZ,mFAJY,CADN;AAORC,iBAAO,EAAE,CACP,uEADO,EAEP,qEAFO,EAGP,0DAHO,EAIP,kEAJO,EAKP,6DAAaH,OAAb,CACEJ,SADF,EAEE;AAAEK,yBAAa,EAAE;AAAjB,WAFF,CAE0B;AAF1B,WALO,CAPD;AAiBRG,mBAAS,EAAE,EAjBH;AAkBRC,mBAAS,EAAE,CAAC,2DAAD;AAlBH,S;AAoBY,Q;;;;;;;;;;;;;;;;;;AC5CtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;AC+BgB;;AACI;;AACE;;AAAK;;AAAoB;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAApB;;AAAmE;;AAAW;;AACrF;;AACJ;;;;;;AAF8E;;AAAA;;;;;;;;AAO9E;;AACI;;AAAqC;AAAA;;AAAA;;AAAA;AAAA;;AAA6B;;AAAiB;;AACvF;;;;;;;;AAGF;;AACI;;AAAoC;AAAA;;AAAA;;AAAA;AAAA;;AAAyB;;AAAa;;AAC9E;;;;QDjCDC,iB;AAmBX,iCAAoBC,WAApB,EAAuDC,MAAvD,EAA+EC,KAA/E,EAAsG;AAAA;;AAAlF,aAAAF,WAAA,GAAAA,WAAA;AAAmC,aAAAC,MAAA,GAAAA,MAAA;AAAwB,aAAAC,KAAA,GAAAA,KAAA;AAjB/E,aAAAC,SAAA,GAA2B,EAA3B;AACA,aAAAC,OAAA,GAAuB,EAAvB;AAOA,aAAAC,KAAA,GAAgB,CAAhB;AAEA,aAAAC,cAAA,GAA0B,KAA1B;AACA,aAAAC,eAAA,GAA2B,KAA3B;AACA,aAAAC,MAAA,GAAqB,EAArB;AACA,aAAAC,KAAA,GAAgB,CAAhB;AAIyG,O,CAEzG;AACA;AACA;AACA;AACA;AAEA;AAEA;;;;;mCAGQ;AAAA;;AACN,eAAKP,KAAL,CAAWQ,QAAX,CAAoBC,SAApB,CAA8B,UAAAC,MAAM,EAAI;AAEtCC,mBAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBF,MAAM,CAACG,GAAP,CAAW,MAAX,CAAnB;AACA,iBAAI,CAACC,QAAL,GAAgBJ,MAAM,CAACG,GAAP,CAAW,MAAX,CAAhB;AACAF,mBAAO,CAACC,GAAR,CAAY,KAAI,CAACE,QAAjB;AACD,WALD;AAMA,eAAKhB,WAAL,CAAiBiB,iBAAjB,CAAmC,KAAKD,QAAxC,EAAkDL,SAAlD,CAA4D,UAACO,GAAD,EAAc;AAExE,iBAAI,CAACf,SAAL,GAAiBe,GAAG,CAACf,SAArB;AACA,iBAAI,CAACgB,MAAL,GAAc,KAAI,CAAChB,SAAL,CAAegB,MAA7B;AACAN,mBAAO,CAACC,GAAR,CAAY,WAAZ,EAAyB,KAAI,CAACX,SAA9B;AACA,iBAAI,CAACiB,eAAL,GAAuB,KAAI,CAACjB,SAAL,CAAe,KAAI,CAACE,KAApB,CAAvB;AACA,iBAAI,CAACgB,mBAAL,GAA2B,KAAI,CAACD,eAAL,CAAqBE,IAAhD;AACAT,mBAAO,CAACC,GAAR,CAAY,uBAAZ,EAAoC,KAAI,CAACO,mBAAzC;AACAR,mBAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgC,KAAI,CAACM,eAArC;AACA,iBAAI,CAAChB,OAAL,GAAe,KAAI,CAACgB,eAAL,CAAqBhB,OAApC;AACAS,mBAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8B,KAAI,CAACV,OAAnC;AACAS,mBAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkC,KAAI,CAACK,MAAvC;AACA,iBAAI,CAACZ,eAAL,GAAuB,IAAvB;AAED,WAdD;AAgBH;;;uCAGc;AACb,cAAI,KAAKF,KAAL,GAAa,KAAKc,MAAtB,EAA8B;AAC5B,cAAE,KAAKd,KAAP;;AACA,gBAAG,KAAKA,KAAL,GAAW,CAAd,EAAgB;AACd,mBAAKE,eAAL,GAAqB,KAArB,CADc,CAEd;AACD;;AAEDM,mBAAO,CAACC,GAAR,CAAY,KAAKT,KAAjB;AACA,iBAAKe,eAAL,GAAuB,KAAKjB,SAAL,CAAe,KAAKE,KAApB,CAAvB;AACA,iBAAKgB,mBAAL,GAA2B,KAAKD,eAAL,CAAqBE,IAAhD;AACA,iBAAKlB,OAAL,GAAe,KAAKgB,eAAL,CAAqBhB,OAApC;AACA,iBAAKE,cAAL,GAAsB,KAAtB,CAX4B,CAY5B;;AACA,gBAAI,KAAKD,KAAL,IAAc,KAAKc,MAAL,GAAc,CAAhC,EAAmC;AACjC,mBAAKb,cAAL,GAAsB,IAAtB,CADiC,CAEjC;AACD;AACF;AAEF;;;2CACkB;AACjB,cAAI,KAAKD,KAAL,GAAa,CAAjB,EAAoB;AAClB,cAAE,KAAKA,KAAP;;AACA,gBAAG,KAAKA,KAAL,GAAW,KAAKc,MAAnB,EAA0B;AACxB,mBAAKb,cAAL,GAAoB,KAApB;AACD;;AACDO,mBAAO,CAACC,GAAR,CAAY,KAAKT,KAAjB;AACA,iBAAKe,eAAL,GAAuB,KAAKjB,SAAL,CAAe,KAAKE,KAApB,CAAvB;AACA,iBAAKgB,mBAAL,GAA2B,KAAKD,eAAL,CAAqBE,IAAhD;AACA,iBAAKlB,OAAL,GAAe,KAAKgB,eAAL,CAAqBhB,OAApC;AACA,iBAAKG,eAAL,GAAuB,KAAvB;AACAM,mBAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8B,KAAKP,eAAnC;;AACA,gBAAI,KAAKF,KAAL,IAAc,CAAlB,EAAqB;AACnB,mBAAKE,eAAL,GAAuB,IAAvB;AACAM,qBAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8B,KAAKP,eAAnC;AACD;AACF;AACF;;;kCACSgB,Q,EAAmB;AAC3B,eAAKf,MAAL,CAAY,KAAKH,KAAjB,IAAwBkB,QAAxB;AACAV,iBAAO,CAACC,GAAR,CAAY,KAAKN,MAAjB;AACD;;;sCACa,CAEb;;;qCACS;AAAA;;AACR,eAAKA,MAAL,CAAYgB,OAAZ,CAAoB,UAAAC,CAAC,EAAI;AACvB,gBAAIA,CAAC,IAAI,IAAT,EAAe;AACb,oBAAI,CAAChB,KAAL;AACD;AACF,WAJD;AAKAI,iBAAO,CAACC,GAAR,CAAY,QAAZ,EAAsB,KAAKL,KAA3B;AACA,eAAKR,MAAL,CAAYyB,QAAZ,CAAqB,CAAC,YAAD,EAAc;AAACjB,iBAAK,EAAC,KAAKA,KAAZ;AAAkBkB,yBAAa,EAAC,KAAKR;AAArC,WAAd,CAArB;AAED;;;;;;;uBAjHYpB,iB,EAAiB,0I,EAAA,uH,EAAA,+H;AAAA,K;;;YAAjBA,iB;AAAiB,mC;AAAA,e;AAAA,a;AAAA,ymB;AAAA;AAAA;ACY5B;;AACE;;AACI;;AACI;;AACI;;AAAkD;;AAA0B;;AAC5E;;AAKJ;;AACJ;;AACA;;AACI;;AACI;;AAGJ;;AACA;;AACE;;AAGF;;AACA;;AACI;;AACI;;AAA+C;AAAA,mBAAS,IAAA6B,UAAA,EAAT;AAAqB,WAArB;;AAAuB;;AAAY;;AACtF;;AACJ;;AAEJ;;AACJ;;AACJ;;AACA;;AAAI;;;;AA5B8D;;AAAA;;AAC7C;;AAAA;;AASyB;;AAAA;;AAKD;;AAAA;;;;;;;;;sED/BhC7B,iB,EAAiB;cAN7B,uDAM6B;eANnB;AACPb,kBAAQ,EAAE,cADH;AAEPC,qBAAW,EAAE,2BAFN;AAGPC,mBAAS,EAAE,CAAC,0BAAD;AAHJ,S;AAMmB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;AEd9B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAQayC,e;AAQX,+BAAoB3B,KAApB,EAA0C;AAAA;;AAAtB,aAAAA,KAAA,GAAAA,KAAA;AAAyB;;;;mCAErC;AAAA;;AACN,eAAKA,KAAL,CAAWQ,QAAX,CAAoBC,SAApB,CAA8B,UAAAC,MAAM,EAAG;AACrC,kBAAI,CAACH,KAAL,GAAWG,MAAM,CAACG,GAAP,CAAW,OAAX,CAAX;AACA,kBAAI,CAACY,aAAL,GAAmBf,MAAM,CAACG,GAAP,CAAW,eAAX,CAAnB;AACA,kBAAI,CAACe,GAAL,GAAS,CAAC,MAAI,CAACrB,KAAf;AACA,kBAAI,CAACsB,EAAL,GAAQ,CAAC,MAAI,CAACJ,aAAd;AACA,kBAAI,CAACK,UAAL,GAAiB,MAAI,CAACF,GAAL,GAAS,MAAI,CAACC,EAAf,GAAmB,GAAnC;AAEAlB,mBAAO,CAACC,GAAR,CAAY,MAAI,CAACL,KAAjB;AACAI,mBAAO,CAACC,GAAR,CAAY,MAAI,CAACa,aAAjB;AAED,WAVD;AAWD;;;;;;;uBAtBUE,e,EAAe,+H;AAAA,K;;;YAAfA,e;AAAe,iC;AAAA,e;AAAA,a;AAAA,8b;AAAA;AAAA;ACP5B;;AACI;;AACI;;AACR;;AACI;;AACE;;AAGE;;AAA2B;;AAAmC;;AAAc;;AAC5E;;AAAI;;AACJ;;AAAoC;;AAAO;;AAC3C;;AAAI;;AAAe;;AACnB;;AAAI;;AAEJ;;AAAsC;;AAA2D;;AAKnG;;AACF;;AACF;;AACA;;AACA;;AACF;;AAEA;;AAAI;;;;AAfQ;;AAAA;;AAGkC;;AAAA;;;;;;;;sEDPjCA,e,EAAe;cAL3B,uDAK2B;eALjB;AACT3C,kBAAQ,EAAE,YADD;AAETC,qBAAW,EAAE,yBAFJ;AAGTC,mBAAS,EAAE,CAAC,wBAAD;AAHF,S;AAKiB,Q;;;;;;;;;;;;;;;;;;;;;;AER5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACWG;;AACD;;AACE;;AACE;;AAAuB;;AAAa;;AACpC;;AAAqB;;AAAuB;;AAE5C;;AAAgC;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAyB;;AAAS;;AACpE;;AACF;;AACA;;;;;;AAN2B;;AAAA;;AACF;;AAAA;;;;QDHd6C,mB;AAGX;AAEA,mCAAoBjC,WAApB,EAAuDC,MAAvD,EAAuE;AAAA;;AAAnD,aAAAD,WAAA,GAAAA,WAAA;AAAmC,aAAAC,MAAA,GAAAA,MAAA;AAJvD,aAAAiC,WAAA,GAAwB,KAAxB;AACA,aAAAC,MAAA,GAAsB,EAAtB;AAG0E;;;;mCAElE;AAAA;;AACN,eAAKnC,WAAL,CAAiBoC,cAAjB,GACCzB,SADD,CACW,UAACO,GAAD,EAAoB;AAC7BL,mBAAO,CAACC,GAAR,CAAYI,GAAZ;AACA,kBAAI,CAACiB,MAAL,GAAcjB,GAAd;AACD,WAJD;AAMD;;;iCAGQf,S,EAAa;AACpBU,iBAAO,CAACC,GAAR,CAAY,cAAZ,EAA2BX,SAA3B;AACA,eAAKF,MAAL,CAAYyB,QAAZ,CAAqB,CAAC,UAAD,EAAY;AAACW,gBAAI,EAAClC,SAAS,CAACkC;AAAhB,WAAZ,CAArB;AACD;;;;;;;uBApBUJ,mB,EAAmB,0I,EAAA,uH;AAAA,K;;;YAAnBA,mB;AAAmB,sC;AAAA,c;AAAA,a;AAAA,qN;AAAA;AAAA;ACXhC;;AAAI;;AAA+B;;AAAK;;AAQvC;;AAEE;;AAUD;;;;AAVqB;;AAAA;;;;;;;;;sEDCVA,mB,EAAmB;cAN/B,uDAM+B;eANrB;AACP/C,kBAAQ,EAAE,iBADH;AAEPC,qBAAW,EAAE,8BAFN;AAGPC,mBAAS,EAAE,CAAC,6BAAD;AAHJ,S;AAMqB,Q;;;;;;;;;;;;;;;;;;;;;;;;AEZhC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA,oE,CAAA;AAEA;AACA;AACA;AACA;AAEA;AACA;;;AAQA,QAAMkD,OAAO,GAAG,iCAAhB;AACA,QAAMC,OAAO,GAAG,sCAAhB;;QAIaC,W;AAGX,2BAAoBC,IAApB,EAAsC;AAAA;;AAAlB,aAAAA,IAAA,GAAAA,IAAA;AAEnB;;;;yCAEa;AACZ,iBAAO,KAAKA,IAAL,CAAU1B,GAAV,CAAcuB,OAAd,CAAP;AACD;;;0CAEiBtB,Q,EAAe;AAC/B,iBAAO,KAAKyB,IAAL,CAAU1B,GAAV,CAAcuB,OAAO,GAACtB,QAAtB,CAAP;AACD;;;;;;;uBAbUwB,W,EAAW,uH;AAAA,K;;;aAAXA,W;AAAW,eAAXA,WAAW,K;AAAA,kBAFV;;;;;sEAEDA,W,EAAW;cAHvB,wDAGuB;eAHZ;AACVE,oBAAU,EAAE;AADF,S;AAGY,Q;;;;;;;;;;;;;;;;;;;;;;ACrBxB;AAAA;;;AAAA;AAAA;AAAA,O,CAAA;AACA;AACA;;;AAEO,QAAMC,WAAW,GAAG;AACzBC,gBAAU,EAAE;AADa,KAApB;AAIP;;;;;;;AAOA;;;;;;;;;;;;;;;;;ACfA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAMA,QAAI,sEAAYA,UAAhB,EAA4B;AAC1B;AACD;;AAED,gFAAyBC,eAAzB,CAAyC,yDAAzC,WACS,UAAAC,GAAG;AAAA,aAAIjC,OAAO,CAACkC,KAAR,CAAcD,GAAd,CAAJ;AAAA,KADZ","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'my-quiz-app';\n}\n","<nav class=\"navbar navbar-expand-lg navbar-light bg-dark\">\n    <a class=\"navbar-brand\" href=\"#\" style=\"color:white\">My-Quiz-App</a>\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      <span class=\"navbar-toggler-icon\"></span>\n    </button>\n  \n    <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n      <ul class=\"navbar-nav mr-auto\">\n        <li class=\"nav-item active\">\n          <a class=\"nav-link\" href=\"/localhost:4200\" style=\"color:white\">Home <span class=\"sr-only\">(current)</span></a>\n        </li>\n        \n        \n      </ul>\n      <form class=\"form-inline my-2 my-lg-0\">\n        <input class=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\">\n        <button class=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">Search</button>\n      </form>\n    </div>\n  </nav>\n\n\n\n\n<br>\n<button class=\"btn btn-dark\" routerLink=\"/view\">View Quizes</button>\n<hr/>\n\n<router-outlet></router-outlet>\n\n\n  \n    ","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport {Routes, RouterModule} from '@angular/router'\nimport { AppComponent } from './app.component';\n// import { MatSliderModule } from '@angular/material/slider';\n\n\n\nimport { ViewQuizesComponent } from './components/view-quizes/view-quizes.component';\nimport { QuestionComponent } from './components/question/question.component';\nimport { ResultComponent } from './components/result/result.component';\n\n//1. Define Routes\nconst appRoutes: Routes = [\n \n  { path: 'view',      component: ViewQuizesComponent },\n  { path: 'question',  component: QuestionComponent},\n  { path: 'viewResult',component: ResultComponent }\n  \n];\n\n//2. Add routes array to module imports\n@NgModule({\n  declarations: [\n    AppComponent,\n    ViewQuizesComponent,\n    QuestionComponent,\n    ResultComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    RouterModule.forRoot(\n      appRoutes,\n      { enableTracing: true } // <-- debugging purposes only\n    )\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }","import { Component, OnInit } from '@angular/core';\nimport { QuizService } from 'src/app/services/quiz.service';\nimport { Question } from 'src/app/models/question';\nimport { Quiz} from 'src/app/models/quiz';\nimport { Choice} from 'src/app/models/choice';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n\n@Component({\n    selector: 'app-question',\n    templateUrl: './question.component.html',\n    styleUrls: ['./question.component.css']\n  })\n\nexport class QuestionComponent implements OnInit {\n  \n  questions: Array<Question>=[]\n  choices: Array<Choice>=[]\n\n\n  currentQuestion: any;\n  \n  quizName: string;\n  \n  index: number = 0;\n  length: any;\n  isLastQuestion: boolean = false;\n  isFirstQuestion: boolean = false;\n  answer: Array<any> = [];\n  count: number = 0;\n  currentQuestionText:string;\n  \n\n  constructor(private quizService : QuizService, private router: Router, private route: ActivatedRoute) { }\n\n  // ngOnInit(): void {\n  //   this.quizService.fetchAllQuestions()\n  //   .subscribe((res:Quiz)=> {\n  //     console.log(res);\n  //     this.questions = res.questions;\n      \n  //   })\n    \n  // }\n\n\n  ngOnInit():void {\n    this.route.paramMap.subscribe(params => {\n      \n      console.log('***', params.get('name'));\n      this.quizName = params.get(\"name\");\n      console.log(this.quizName);\n    })\n    this.quizService.fetchAllQuestions(this.quizName).subscribe((res: any) => {\n      \n      this.questions = res.questions;\n      this.length = this.questions.length;\n      console.log(\"questions\", this.questions);\n      this.currentQuestion = this.questions[this.index];\n      this.currentQuestionText = this.currentQuestion.text;\n      console.log(\"current question text\",this.currentQuestionText)\n      console.log(\"current question\", this.currentQuestion);\n      this.choices = this.currentQuestion.choices;\n      console.log(\"current choice\", this.choices);\n      console.log(\"length of question\", this.length);\n      this.isFirstQuestion = true;\n      \n    })\n\n}\n\n\nnextQuestion() {\n  if (this.index < this.length) {\n    ++this.index;\n    if(this.index>0){\n      this.isFirstQuestion=false;\n      // console.log(\"from next\",this.isFirstQuestion);\n    }\n    \n    console.log(this.index);\n    this.currentQuestion = this.questions[this.index];\n    this.currentQuestionText = this.currentQuestion.text;\n    this.choices = this.currentQuestion.choices;\n    this.isLastQuestion = false;\n    //  console.log(\"last question\",this.isLastQuestion);\n    if (this.index == this.length - 1) {\n      this.isLastQuestion = true;\n      // console.log(this.isLastQuestion);\n    }\n  }\n\n}\npreviousQuestion() {\n  if (this.index > 0) {\n    --this.index;\n    if(this.index<this.length){\n      this.isLastQuestion=false;\n    }\n    console.log(this.index);\n    this.currentQuestion = this.questions[this.index];\n    this.currentQuestionText = this.currentQuestion.text;\n    this.choices = this.currentQuestion.choices;\n    this.isFirstQuestion = false;\n    console.log(\"first question\", this.isFirstQuestion);\n    if (this.index == 0) {\n      this.isFirstQuestion = true;\n      console.log(\"first question\", this.isFirstQuestion);\n    }\n  }\n}\ncalculate(isAnswer: boolean) {\n  this.answer[this.index]=isAnswer;\n  console.log(this.answer);\n}\nfinalResult() {\n \n}\nviewResult(){\n  this.answer.forEach(i => {\n    if (i == true) {\n      this.count++;\n    }\n  });\n  console.log(\"result\", this.count);\n  this.router.navigate([\"viewResult\",{count:this.count,totalQuestion:this.length}]);\n\n}\n\n}\n\n\n\n\n\n","\n\n\n  <!-- <ul class=\"list-group\">\n    <li *ngFor=\"let question of questions\"><h4>Q. {{question.text}}</h4>\n      <ul>\n        <li class=\"list-group-item\" *ngFor=\"let choice of question.choices\">\n          <div class=\"form-check\">\n            <label class=\"form-check-label\">\n              <input type=\"radio\" class=\"form-check-input\" value=\"\">{{choice.text}}\n            </label>\n          </div>\n        </li>\n      </ul>\n      <br>\n      \n    </li>\n  </ul>\n  <br>\n  <hr>\n\n  <button class=\"btn btn-primary\" >Submit Test</button>\n\n  <br><br> -->\n\n\n  <div class=\"container mt-5\">\n    <div class=\"jumbotron\">\n        <div class=\"row\">\n            <div class=\"col-sm\">\n                <h1 class=\"display-4\" style=\"text-align: center;\">Q. {{currentQuestionText}}</h1>\n                <div *ngFor=\"let c of choices\" class=\"lead mt-2\">\n                    <label class=\"btn btn-primary-outline btn-lg \">\n                      <h2> <input type=\"radio\" (click)=\"calculate(c.isAnswer)\" name=\"answer\"> {{c.text}} </h2>\n                    </label>\n                </div>\n            </div>\n        </div>\n        <div class=\"row mt-3\">\n            <div class=\"col-sm-5\">\n                <span class=\"lead text-right\" *ngIf=\"! isFirstQuestion\">\n                    <button class=\"btn btn-info btn-lg \" (click)=\"previousQuestion()\">Previous Question</button>\n                </span>\n            </div>\n            <div class=\"col-sm-4\">\n              <span class=\"lead text-center\" *ngIf=\"! isLastQuestion\">\n                  <button class=\"btn btn-info btn-lg\" (click)=\"nextQuestion()\">Next Question</button>\n              </span>\n            </div>\n            <div class=\"col-sm-3\">\n                <div class=\"lead\">\n                    <button class=\"btn btn-primary-outline btn-lg\" (click)=\"viewResult()\">Submit Test!</button>\n                </div>\n            </div>\n            \n        </div>\n    </div>\n</div>\n<br><br>\n\n\n\n  \n  \n\n\n  \n  ","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-result',\n  templateUrl: './result.component.html',\n  styleUrls: ['./result.component.css']\n})\nexport class ResultComponent implements OnInit {\n\n  count:string;\n  totalQuestion:string;\n  cnt:number;\n  tq:number;\n  percentage:number;\n  \n  constructor(private route:ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.route.paramMap.subscribe(params =>{\n      this.count=params.get(\"count\");\n      this.totalQuestion=params.get(\"totalQuestion\");\n      this.cnt=+this.count;\n      this.tq=+this.totalQuestion;\n      this.percentage=(this.cnt/this.tq)*100;\n      \n      console.log(this.count);\n      console.log(this.totalQuestion);\n      \n    })\n  }\n\n}","\n<div class=\"container mt-5\">\n    <div class=\"row\">\n        <div class=\"col\">\n<div class=\"card card-image\" style=\"background-image: url(https://wallpapertag.com/wallpaper/full/4/5/c/483345-background-dark-1920x1080-for-windows-7.jpg);\">\n    <div class=\"text-white text-center rgba-stylish-strong py-5 px-4\">\n      <div class=\"py-5\">\n  \n        \n        <h5 class=\"h5 orange-text\"><i class=\"fas fa-camera-retro\"></i>Keep Hustling!</h5>\n        <br><br>\n        <h2 class=\"card-title h2 my-4 py-2\">Result:</h2>\n        <h1>{{percentage}}%</h1>\n        <br><br>\n      \n        <h3 class=\"mb-4 pb-2 px-md-5 mx-md-5\">You got {{count}} questions right out of {{totalQuestion}}.</h3>\n\n        \n        \n  \n      </div>\n    </div>\n  </div>\n  </div>\n  </div>\n</div>\n\n<br><br>\n  \n\n  <!-- <div class=\"container mt-5\">\n    <div class=\"row\">\n        <div class=\"col\">\n            <div class=\"jumbotron\">\n                <h2 class=\"display-4\">Your Result</h2>\n                <p class=\"lead\">Total Correct Answer {{count}}</p>\n                <p class=\"lead\">Total Number of Question {{totalQuestion}}</p>\n            </div>\n        </div>\n    </div>\n</div>\n   -->","import { Component, OnInit } from '@angular/core';\nimport { QuizService } from 'src/app/services/quiz.service';\nimport { Quiz } from 'src/app/models/quiz';\nimport { Router } from '@angular/router';\n\n\n@Component({\n    selector: 'app-view-quizes',\n    templateUrl: './view-quizes.component.html',\n    styleUrls: ['./view-quizes.component.css']\n  })\n\nexport class ViewQuizesComponent implements OnInit {\n  showMessage : boolean = false;\n  quizes: Array<Quiz> = []\n  // questions: Array<any>\n\n  constructor(private quizService : QuizService, private router: Router) { }\n\n  ngOnInit(): void {\n    this.quizService.fetchAllQuizes()\n    .subscribe((res:Array<Quiz>)=> {\n      console.log(res);\n      this.quizes = res;\n    })\n    \n  }\n\n  \n  takeQuiz(questions:any){\n    console.log(\"in take quiz\",questions);\n    this.router.navigate([\"question\",{name:questions.name}]);\n  }\n\n}\n\n","\n<h3>Below Quizes are Available Now:</h3><br>\n\n<!-- <ul class=\"list-group\">\n    <li class=\"list-group-item\" *ngFor=\"let quiz of quizes\"> <p>{{quiz.name}} | {{quiz.id}}<button class=\"btn btn-primary\" routerLink=\"/question\" >Go to Quiz</button>\n  </ul>\n\n  <hr/> -->\n\n <div class=\"row\">\n  \n   <div class=\"col-sm\" *ngFor=\"let quiz of quizes\">\n  <div class=\"card\" style=\"width: 18rem;\" >\n    <div class=\"card-body\">\n      <h5 class=\"card-title\">{{quiz.name}}</h5>\n      <p class=\"card-text\">Take {{quiz.name}} quiz</p>\n      <!-- <button class=\"btn btn-primary\" routerLink=\"/question\" >Go to Quiz</button> -->\n      <button class=\"btn btn-primary\" (click)=\"takeQuiz(quiz)\">Take Quiz</button>\n    </div>\n  </div>\n  </div>\n  </div>\n\n\n  <!-- <table class=\"table table-striped\">\n    <thead>\n      <tr>\n        \n        <th scope=\"col\">Id</th>\n        <th scope=\"col\">Text</th>\n      </tr>\n    </thead>\n    <ng-container *ngIf=\"quizes.length\">\n       <tbody *ngFor=\"let quiz of quizes; let i = index\">\n         <tr *ngFor=\"let question of quiz.questions;\">\n           <td>{{question.id}}</td>\n           <td>{{question.text}}</td>\n           \n         </tr>\n       </tbody>\n     </ng-container>\n   </table> -->","// import { Injectable } from '@angular/core';\n\n// @Injectable({\n//   providedIn: 'root'\n// })\n// export class QuizService {\n\n//   constructor() { }\n// }\n\n\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Quiz } from '../models/quiz';\n\n\nconst baseUrl = 'http://localhost:8000/api/quiz/'\nconst quesUrl = 'http://localhost:8000/api/quiz/react'\n@Injectable({\n  providedIn: 'root'\n})\nexport class QuizService {\n  name: string;\n\n  constructor(private http: HttpClient) { \n    \n  }\n\n  fetchAllQuizes(){\n    return this.http.get(baseUrl);\n  }\n\n  fetchAllQuestions(quizName:string){\n    return this.http.get(baseUrl+quizName);\n  }\n\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}